include ./../count-button/count-button.pug
include ./../button/button.pug

// Material icons 
link(href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet")

// Options: guests, date and comfort
- 
  var dropdowns = {
    guests: {
      placeholder: "Сколько гостей", 
      items: ["взрослые", "дети", "младенцы"]},
    comfort: {
      placeholder: "2 спальни, 2 кровати...", 
      items: ["спальни", "кровати", "ванные комнаты"]
    }
  };

mixin dropdown(option, size, placeholderTitle) 
  - var sizeClass = (size == "big") ? " dropdown-size-big" : " dropdown-size-medium"
  - var typeClass = (option == "guests") ? " dropdown-guests" : " dropdown-comfort"
  div(class = "dropdown" + sizeClass + typeClass)
    div(class = "dropdown-button")
      span(class = "dropdown-button--title") #{dropdowns[option].placeholder}
      span(class = "dropdown-button--icon material-icons") keyboard_arrow_down
    div(class = "dropdown-content")
      - for (var i = 0; i < dropdowns[option].items.length; i++)
        li(class="dropdown-content--item") !{"<span class='dropdown-content--itemname'>"}#{dropdowns[option].items[i]}!{"</span>"}
          div(class="dropdown-counter")
            button(class="dropdown-counter--btnminus") - 
            span(class="dropdown-counter--amount") 0
            button(class="dropdown-counter--btnplus") +  
    div(class = "dropdown-textbtn")                  
      +button({isTextButton: true, size: "small", title: "очистить", className: "dropdown-textbtn-erase"})
      +button({isTextButton: true, size: "small", title: "применить", className: "dropdown-textbtn-apply"}) 